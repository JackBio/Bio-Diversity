corrplot.mixed(co2$r, p.mat = co2$P,
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red",
upper = 'ellipse', lower.col = 'black', number.cex= .6,
tl.col='blue', tl.pos = 'lt',diag = 'l', plotCI = 'circle')
corrplot.mixed(co2$r, p.mat = co2$P,
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red",
upper = 'ellipse', lower.col = 'black', number.cex= .6,
tl.col='blue', tl.pos = 'lt',diag = 'l')
corrplot.mixed(co2$r, p.mat = co2$P,
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red",
upper = 'ellipse', lower.col = 'black', number.cex= .6,
tl.col='blue', tl.pos = 'n',diag = 'l')
corrplot.mixed(co2$r, p.mat = co2$P,
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red",
upper = 'ellipse', lower.col = 'black', number.cex= .6,
tl.col='blue', tl.pos = 'd',diag = 'l')
corrplot.mixed(co2$r, p.mat = co2$P,
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red",
upper = 'ellipse', lower.col = 'black', number.cex= .6,
tl.col='blue', tl.pos = 'd',diag = 'u')
p.hea = corrplot.mixed(co2$r, p.mat = co2$P,
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red",
upper = 'ellipse', lower.col = 'black', number.cex= .6,
tl.col='blue', tl.pos = 'lt',diag = 'l')
#合并
figure1 <- (p.com / p.tre) + p.hea + plot_annotation(tag_levels = 'A') & #"A"表示“ABC”计数,必须凑齐所有的图再一起编号,代码不能单独设置"B"或者"C"
theme(plot.tag = element_text(size = 20))
figure1
p.hea = corrplot.mixed(co2$r, p.mat = co2$P,
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red",
upper = 'ellipse', lower.col = 'black', number.cex= .6,
tl.col='blue', tl.pos = 'lt',diag = 'l')
#合并
figure1 <- (p.com / p.tre) + p.hea + plot_annotation(tag_levels = 'A') & #"A"表示“ABC”计数,必须凑齐所有的图再一起编号,代码不能单独设置"B"或者"C"
theme(plot.tag = element_text(size = 20))
#粗略出图
corrplot(co2$r, method = c('circle'), type = c('upper'), title = 'test')
p.hea = corrplot(co2$r, method = c('circle'), type = c('upper'), +
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red", +
number.cex= .6, tl.col='blue')
p.hea = corrplot(co2$r, method = c('circle'), type = c('upper'),
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red",
number.cex= .6, tl.col='blue')
p.hea = corrplot(co2$r, method = c('circle'), type = c('upper'), number.cex= .6, tl.col='blue') +
corrplot.mixed(insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red")
p.hea = corrplot.mixed(co2$r, p.mat = co2$P,
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red",
method = c('circle'), type = c('upper'), number.cex= .6, tl.col='blue')
p.hea = corrplot(co2$r, p.mat = co2$P, method = c('circle'), type = c('upper'), insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0, pch.col = "red", tl.col='blue')
p.hea = corrplot(co2$r, p.mat = co2$P, method = c('circle'), type = c('upper'),
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0,
pch.col = "red", tl.col='blue')
#合并
figure1 <- (p.com / p.tre) + p.hea + plot_annotation(tag_levels = 'A') & #"A"表示“ABC”计数,必须凑齐所有的图再一起编号,代码不能单独设置"B"或者"C"
theme(plot.tag = element_text(size = 20))
library(patchwork)
#合并
figure1 <- (p.com / p.tre) + p.hea + plot_annotation(tag_levels = 'A') & #"A"表示“ABC”计数,必须凑齐所有的图再一起编号,代码不能单独设置"B"或者"C"
theme(plot.tag = element_text(size = 20))
rlang::last_error()
#合并
figure1 <- (p.com / p.tre) + plot_annotation(tag_levels = 'A') & #"A"表示“ABC”计数,必须凑齐所有的图再一起编号,代码不能单独设置"B"或者"C"
theme(plot.tag = element_text(size = 20))
figure1
p.com
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(size = 12, colour = 'black')) +
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5)
#合并
figure1 <- p.com / p.tre + p.hea + plot_annotation(tag_levels = 'A') & #"A"表示“ABC”计数,必须凑齐所有的图再一起编号,代码不能单独设置"B"或者"C"
theme(plot.tag = element_text(size = 20))
#合并
figure1 <- p.com / p.tre + plot_annotation(tag_levels = 'A') & #"A"表示“ABC”计数,必须凑齐所有的图再一起编号,代码不能单独设置"B"或者"C"
theme(plot.tag = element_text(size = 20))
figure1
#合并
figure1 <- p.com + p.tre + p.hea + plot_annotation(tag_levels = 'A') & #"A"表示“ABC”计数,必须凑齐所有的图再一起编号,代码不能单独设置"B"或者"C"
theme(plot.tag = element_text(size = 20))
p.hea
#合并
figure1 <- p.com / p.tre +
corrplot(co2$r, p.mat = co2$P, method = c('circle'), type = c('upper'),
insig = "label_sig", sig.level = c(.001, .01, .05), pch.cex = 1.0,
pch.col = "red", tl.col='blue') +
plot_annotation(tag_levels = 'A') & #"A"表示“ABC”计数,必须凑齐所有的图再一起编号,代码不能单独设置"B"或者"C"
theme(plot.tag = element_text(size = 20))
figure1
View(p.hea)
View(p.com)
View(p.com)
install.packages('rimage')
library(rimage)
install.packages('imager')
install.packages('png')
install.packages('png')
install.packages('png')
png = readPNG('/Users/yanjiacheng/Desktop/毕业数据/sci/丰度/原核upset-degree.png')
library(png)
library(imager)
png = readPNG('/Users/yanjiacheng/Desktop/毕业数据/sci/丰度/原核upset-degree.png')
png
r <- nrow(png)/ncol(png)
plot(c(0,1),c(0,r),type = "n",xlab = "",ylab = "",asp=1)
rasterImage(imgpng,0,0,1,r)
rasterImage(png,0,0,1,r)
jpg <- load.image('/Users/yanjiacheng/Downloads/4s2s4c761j5e.jpg')
plot(jpg,xlim = c(1,width(jpg)),ylim = c(height(jpg),1))
p.com / p.tre + png
p.com / p.tre
p.com
#读取excel文档xlsx的数据
library(readxl)
hplc <- read_excel(path = "/Users/yanjiacheng/Desktop/毕业数据/液相总表.xlsx", sheet = 2, col_names = T)
hplc$ids <- as.factor(hplc$ids)#否则后期glht(model, linfct())报错‘character’不是model的factor
#剥离所需数据
p <- hplc[1:30,15:16]
b <- hplc[31:60,15:16]
t_b <- hplc[61:90,15:16]
#使用方差分析
library(multcomp)
#各组样本数量、含量均值和标准差
attach(p)
table(ids)
aggregate(val, by = list(ids), FUN = mean)
#检验组间差异ANOVA
fit <- aov(val ~ ids)
summary(fit)
#多组Kruskal–Wallis的t检验
kruskal.test(val ~ ids, data = p)
#绘制各组均值及其置信区间的图形
library(gplots)
plotmeans(val ~ ids, xlab = '组名\nids', ylab = '含量\nval µg/g', main = '平均数MEAN\n95%CI置信区间')
detach(p)
#使用TukeyHSD多重比较（LSD、SSR、Q...?）
TukeyHSD(fit)
par(las = 1)#标签水平放置，2表示竖直放置
par(mar = c(5,8,4,2))#底左顶右的留白，增大左边界的空余面积
plot(TukeyHSD(fit))
par(mar = c(5,4,6,2))#增大了顶部面积摆放字母
tuk <- glht(fit, linfct = mcp(ids = 'Tukey'))#ids是可变的，与前文ids符合
plot(cld(tuk, level = .05), col = 'lightgrey')
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(size = 12, colour = 'black')) +
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5)  #去tt里看p,用字母标记法
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages(pgirmess)
install.packages('pgirmess')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
#10-巴卡亭多重比较
attach(t_b)
fit3 <- aov(val ~ ids)
summary(fit3)
tuk3 <- glht(fit3, linfct = mcp(ids = 'Tukey'))
par(las = 2)#名称太长需要旋转
plot(cld(tuk3, level = .05), col = 'blue')
detach(t_b)
#非参数检验，两样本用Wilcoxon秩和检验，三个或以上用Kruskal-Wallis秩和检验
kruskal.test(val ~ ids, data=b)#整体显著
kruskal.test(val ~ ids, data=t_b)#整体显著
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages('sp')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages('spdep')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages('spData')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages('raster')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages('DBI')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages('classInt')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages('proxy')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages('units')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
install.packages('units')
install.packages('deldir')
#两两比较，pgirmess::kruskalmc()得不到具体p值，用PMCMR::Nemenyi()
#PMCER报错，用PMCMRplus::kwAllPairsNemenyiTest()
library(pgirmess)
#library(spdep)
kruskalmc(val ~ ids, data = b, probs = 0.05)#但得到整个hplc两两比较结果且不对劲
library(PMCMRplus)
library(PMCMR)
posthoc.kruskal.conover.test(val ~ ids, data = b, probs = 0.05)
#posthoc.kruskal.conover.test(val ~ ids, data = b, probs = 0.05)被提示无效
PMCMRplus::kwAllPairsConoverTest(val ~ ids, data = b, probs = 0.05)
posthoc.kruskal.nemenyi.test(val ~ ids, data = b)#未校正，报警Ties are present, p-values are not corrected.
PMCMRplus::kwAllPairsNemenyiTest(val ~ ids, data = b)
#posthoc.kruskal.nemenyi.test(val ~ ids, data = b, dist = "Chisq")
PMCMRplus::kwAllPairsNemenyiTest(val ~ ids, data = b, dist = "Chisq")#校正，报警Ties are present. Chi-sq was corrected for ties.
#posthoc.kruskal.nemenyi.test(val ~ ids, data = t_b, dist = "Chisq")
PMCMRplus::kwAllPairsNemenyiTest(val ~ ids, data = t_b, dist = "Chisq")
tt = kwAllPairsNemenyiTest(val ~ ids, data = t_b, dist = "Chisq")
ad = adjust_pvalue(tt, method = 'bonferroni') %>%
add_significance()
library(dplyr)
ad = adjust_pvalue(tt, method = 'bonferroni') %>%
add_significance()
ad = adjust_pvalue(tt, method = 'bonferroni') %>%
rstatix::add_significance()
library(rstatix)
ad = adjust_pvalue(tt, method = 'bonferroni') %>%
rstatix::add_significance()
#画箱线图，配置背景，最后拿去PPT手动标星星
library(ggThemeAssist)
library(ggplot2)
bk <- ggplot(data = b, aes(x = ids, y = val, col = as.factor(ids))) + geom_boxplot()
library(ggpubr)#主要就是它了，会出星星——但我最后还是用的字母标记法,不会多重比较的分组标记,参https://www.cnblogs.com/shuaihe/p/15316615.html
library(ggsignif)#添加线段
library(patchwork)#添加编号,参https://blog.csdn.net/weixin_42350411/article/details/113316500
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(size = 12, colour = 'black')) +
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5)  #去tt里看p,用字母标记法
#+
stat_compare_means(aes(group = ids), label = 'p.format') +
add_xy_position(t_b, x = 'ids',y = 'val µg/g', dodge = 0.8) + #Error in is.data.frame(x) : argument "test" is missing, with no default
stat_pvalue_manual(t_b, color = 'ids', step.group.by = 'ids',
tip.length = o, step.increase = 0.1)
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(size = 12, colour = 'black')) +
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5)  #去tt里看p,用字母标记法
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(size = 12, colour = 'black')) +
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5)  +#去tt里看p,用字母标记法
+
stat_compare_means(aes(group = ids), label = 'p.format') +
add_xy_position(t_b, x = 'ids',y = 'val µg/g', dodge = 0.8) + #Error in is.data.frame(x) : argument "test" is missing, with no default
stat_pvalue_manual(t_b, color = 'ids', step.group.by = 'ids',
tip.length = o, step.increase = 0.1)
ggThemeAssistGadget(bk)#名称必须是纯字母才能识别为ggplot的“对象”
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(size = 12, colour = 'black')) +
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5) + #去tt里看p,用字母标记法
#+
stat_compare_means(aes(group = ids), label = 'p.format') +
add_xy_position(t_b, x = 'ids',y = 'val µg/g', dodge = 0.8) + #Error in is.data.frame(x) : argument "test" is missing, with no default
stat_pvalue_manual(t_b, color = 'ids', step.group.by = 'ids',
tip.length = o, step.increase = 0.1)
ggThemeAssistGadget(bk)#名称必须是纯字母才能识别为ggplot的“对象”
bk + theme(panel.background = element_rect(fill = "gray100"),
legend.key = element_rect(fill = "gray100"))
ggThemeAssistGadget(bk)#名称必须是纯字母才能识别为ggplot的“对象”
bk + theme(panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA)) +labs(y = "val µg/g")
plot(cld(tuk3, level = .05), col = 'blue', labs(y = "val µg/g"))
length(ex1 <- expression(1 + 0:9))
ex1
eval(ex1)
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
axis.text.x = element_text(size = 12, colour = 'black')) +
labs(y = "val µg/g")+
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5)  #去tt里看p,用字母标记法
p.com
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"), legend.background = element_rect(fill = NA))
p.com
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"), legend.background = element_rect(fill = NA))，
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"), legend.background = element_rect(fill = NA)),
axis.text.x = element_text(size = 12, colour = 'black')) +
labs(y = "val µg/g")+
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5)  #去tt里看p,用字母标记法
p.com
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"), legend.background = element_rect(fill = NA),
axis.text.x = element_text(size = 12, colour = 'black')) +
labs(y = "val µg/g")+
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5)  #去tt里看p,用字母标记法
p.com
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA),
axis.text.x = element_text(size = 12, colour = 'black')) +
labs(y = "val µg/g")+
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","b","b","b","b"), colour = 'black', size = 5)  #去tt里看p,用字母标记法
p.com
p.com + ggtitle(label = 'A')
p.com + labs(title = "title", tag = "A")
p.com + labs(tag = "A")
bk + theme(panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA)) +labs(y = "val µg/g")
#posthoc.kruskal.nemenyi.test(val ~ ids, data = b, dist = "Chisq")
PMCMRplus::kwAllPairsNemenyiTest(val ~ ids, data = b, dist = "Chisq")#校正，报警Ties are present. Chi-sq was corrected for ties.
#posthoc.kruskal.nemenyi.test(val ~ ids, data = t_b, dist = "Chisq")
PMCMRplus::kwAllPairsNemenyiTest(val ~ ids, data = t_b, dist = "Chisq")
+labs(tag = "A")#可以使左上角标A
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA),
axis.text.x = element_text(size = 12, colour = 'black')) +
labs(y = "val µg/g")+
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标，但位置不够左上
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","ab","ab","ab","b"), colour = 'black', size = 5) + #去tt里看p,用字母标记法
labs(tag = "A") + #可以使左上角标A
stat_compare_means(aes(group = ids), label = 'p.format') +
add_xy_position(t_b, x = 'ids',y = 'val µg/g', dodge = 0.8) + #Error in is.data.frame(x) : argument "test" is missing, with no default
stat_pvalue_manual(t_b, color = 'ids', step.group.by = 'ids',
tip.length = o, step.increase = 0.1)
p.com = ggplot(data = t_b, aes(x = ids, y = val, col = ids)) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "gray100"),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA),
axis.text.x = element_text(size = 12, colour = 'black')) +
labs(y = "val µg/g")+
#ggtitle(label = 'A') + #本图用title也可以达成编号的目标，但位置不够左上
#annotate("text", x = 1, y = 800, label = "A", colour = 'black', size = 5) + #图编号,也可以geom_text(),但位置不太好弄
annotate("text", x = c(1,2,3,4,5,6), y = 800, label = c("a","a","ab","ab","ab","b"), colour = 'black', size = 5) + #去tt里看p,用字母标记法
labs(tag = "A") #+ #可以使左上角标A
p.com
bk + theme(panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA)) +labs(y = "val µg/g") +
annotate("text", x = c(1,2,3,4,5,6), y = 800,
label = c("a","a","ab","ab","ab","b"), colour = 'black', size = 5) +
labs(tag = "B")
bk + theme(panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA)) +labs(y = "val µg/g") +
annotate("text", x = c(1,2,3,4,5,6), y = 80,
label = c("a","a","ab","ab","ab","b"), colour = 'black', size = 5) +
labs(tag = "B")
bk + theme(panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA)) +labs(y = "val µg/g") +
annotate("text", x = c(1,2,3,4,5,6), y = 200,
label = c("a","a","ab","ab","ab","b"), colour = 'black', size = 5) +
labs(tag = "B")
bk + theme(panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA)) +labs(y = "val µg/g") +
annotate("text", x = c(1,2,3,4,5,6), y = 150,
label = c("a","a","ab","ab","ab","b"), colour = 'black', size = 5) +
labs(tag = "B")
bk + theme(panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA)) +labs(y = "val µg/g") +
annotate("text", x = c(1,2,3,4,5,6), y = 120,
label = c("a","a","ab","ab","ab","b"), colour = 'black', size = 5) +
labs(tag = "B")
ggThemeAssistGadget(bk)#名称必须是纯字母才能识别为ggplot的“对象”
bk <- ggplot(data = b, aes(x = ids, y = val, col = ids)) + geom_boxplot()
ggThemeAssistGadget(bk)#名称必须是纯字母才能识别为ggplot的“对象”
bk + theme(panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "gray100"),
legend.background = element_rect(fill = NA)) +labs(y = "val µg/g") +
annotate("text", x = c(1,2,3,4,5,6), y = 120,
label = c("a","a","ab","ab","ab","b"), colour = 'black', size = 5) +
labs(tag = "B")
plot(cld(tuk3, level = .05), col = 'blue',)
par(las = 2)#名称太长需要旋转
plot(cld(tuk3, level = .05), col = 'blue',)
tuk3 <- glht(fit3, linfct = mcp(ids = 'Tukey'))
summary(fit3)
tuk3
plotmeans(val ~ ids, xlab = '组名\nids', ylab = '含量\nval µg/g', main = '平均数MEAN\n95%CI置信区间')
#检验组间差异ANOVA
fit <- aov(val ~ ids)
#是否正态分布（参数检验）p>0.05时为正态分布，非正态就用非参数
shapiro.test(p$val) #符合，样本df=n-1，总体df=n
#符合正态的数据检测方差齐性，p>0.05时为齐性
bartlett.test(val ~ ids, data=p)
aggregate(val, by = list(ids), FUN = mean)
plotmeans(val ~ ids, xlab = '组名\nids', ylab = '含量\nval µg/g', main = '平均数MEAN\n95%CI置信区间')
#读取excel文档xlsx的数据
library(readxl)
hplc <- read_excel(path = "/Users/yanjiacheng/Desktop/毕业数据/液相总表.xlsx", sheet = 2, col_names = T)
hplc$ids <- as.factor(hplc$ids)#否则后期glht(model, linfct())报错‘character’不是model的factor
#剥离所需数据
p <- hplc[1:30,15:16]
#符合正态的数据检测方差齐性，p>0.05时为齐性
bartlett.test(val ~ ids, data=p)
#使用方差分析
library(multcomp)
aggregate(val, by = list(ids), FUN = mean)
aggregate
aggregate(val, by = list(ids), FUN = mean)
#检验组间差异ANOVA
fit <- aov(val ~ ids)
#非正态、正态的数据都能检测，p>0.05表示齐性
leveneTest(val ~ ids, data=p)
aggregate(p$val, by = list(ids), FUN = mean)
aggregate(p$val, by = list(p$ids), FUN = mean)
#各组样本数量、含量均值和标准差
attach(p)
table(ids)
aggregate(p$val, by = list(p$ids), FUN = mean)
aggregate(p$val, by = list(p$ids), FUN = sd)
aggregate(p$val, by = list(p$ids), FUN = sd)
#检验组间差异ANOVA
fit <- aov(val ~ ids)
summary(fit)
#多组Kruskal–Wallis的t检验
kruskal.test(val ~ ids, data = p)
#绘制各组均值及其置信区间的图形
library(gplots)
plotmeans(val ~ ids, xlab = '组名\nids', ylab = '含量\nval µg/g', main = '平均数MEAN\n95%CI置信区间')
detach(p)
#使用TukeyHSD多重比较（LSD、SSR、Q...?）
TukeyHSD(fit)
par(las = 1)#标签水平放置，2表示竖直放置
par(mar = c(5,8,4,2))#底左顶右的留白，增大左边界的空余面积
plot(TukeyHSD(fit))
par(mar = c(5,4,6,2))#增大了顶部面积摆放字母
tuk <- glht(fit, linfct = mcp(ids = 'Tukey'))#ids是可变的，与前文ids符合
plot(cld(tuk, level = .05), col = 'lightgrey')
p.p = plot(cld(tuk, level = .05), col = 'lightgrey')
p.p + labs(tag = 'C')
plot(cld(tuk, level = .05), col = 'lightgrey', labs(y = "val µg/g"))
plot(cld(tuk, level = .05), col = 'lightgrey', ylab = 'val µg/g')
plot(cld(tuk, level = .05), col = 'lightgrey', yaxt = 'val µg/g')
#读入数据，防止纯数字标题被加X，可以用check.names = F解决（第一版数据这样了，后来数据改了布局）
alldab <- read.table('/Users/yanjiacheng/Desktop/毕业数据/10dab含量.txt', header = T, sep = '\t', check.names=F)
library(ggplot2)
#library(ggThemeAssist)
#library(esquisse)
dab <- ggplot(data = alldab, mapping = aes(x = years, y = logcontent, colour = location)) +
geom_point() + #geom_tile(aes(fill=location)) + #scale_colour_brewer(alldab$location) +
geom_smooth(stat = 'smooth', method="loess", se = FALSE, formula = 'y ~x') +  #拟合区间关闭, method = lm这是直线)
theme(panel.background = element_rect(colour = "black",linetype = "solid"),  #内框实心
plot.background = element_rect(colour = "black"), #外框出现
plot.title = element_text(hjust = 0.5)) + #标题居中hjust和vjust
labs(title = "Trend of 10-dab content in two regions with year") +
theme(plot.subtitle = element_text(colour = "gray34"),
panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "white", colour = "white"),
legend.background = element_rect(fill = NA))
dab + plot_annotation(tag_levels = 'B') &
theme(plot.tag = element_text(size = 20))
#ggThemeAssistGadget(dab)
#esquisse::esquisser()
#想把内框做成半框？先做sci的事
p.tre = ggplot(data = alldab, mapping = aes(x = years, y = logcontent, colour = location)) +
geom_point() +
geom_smooth(stat = 'smooth', method="loess", se = FALSE, formula = 'y ~x') +  #拟合区间关闭, method = lm这是直线)
theme(panel.background = element_rect(colour = "black",linetype = "solid"),  #内框实心
plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(colour = "gray34"),
panel.background = element_rect(fill = NA),
legend.key = element_rect(fill = "white", colour = "white"),
legend.background = element_rect(fill = NA))
p.tre
p.tre+labs(tag = "A")
p.tre+labs(tag = "B")
